version: '3.8'

services:
  postgres:  # PostgreSQL数据库 - 生产环境配置
    image: postgres:15-alpine
    container_name: yomu_postgres_prod
    environment:
      POSTGRES_DB: yomu_prod
      POSTGRES_USER: ${POSTGRES_USER:-yomu_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - yomu_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-yomu_user}"]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql

  yomu_app:  # 应用
    build:
      context: .
      dockerfile: Dockerfile
    container_name: yomu_app_prod
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-yomu_user}:${POSTGRES_PASSWORD}@postgres:5432/yomu_prod
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL:-}
      OPENAI_MODEL: ${OPENAI_MODEL:-}
      SECRET_KEY: ${SECRET_KEY}
      FURIGANA_MODE: ${FURIGANA_MODE:-hybrid}
      ENVIRONMENT: production
    ports:
      - "127.0.0.1:3434:3434"
    networks:
      - yomu_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3434/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:  # 可选反向代理
    image: nginx:alpine
    container_name: yomu_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - yomu_network
    depends_on:
      - yomu_app
    restart: unless-stopped
    profiles:
      - nginx

volumes:
  postgres_prod_data:
    driver: local

networks:
  yomu_network:
    driver: bridge
    # internal: true
